[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
name = "scflow"
version = "0.0.0"
description = "Process and analyze scRNA-seq and spatial omics data."
readme = "README.md"
requires-python = ">=3.10.4"
license = {file = "LICENSE"}
authors = [
    {name = "Elizabeth Aslinger"}
]
maintainers = [
    {name = "Elizabeth Aslinger", email = "elizabeth.aslinger@aya.yale.edu"},
]
urls.Documentation = "https://github.com/easlinger/scflow/README.md"
urls.Source = "https://github.com/easlinger/scflow"
urls.Home-page = "https://github.com/easlinger/scflow"
dependencies = [

    # Core
    "docutils < 0.17,>= 0.10",
    "numpy >=1.24.4",
    "pandas>=2.0.0",
    "anndata",
    "scanpy",
    "mudata",
    "igraph",
    "leidenalg",
    "celltypist",

    # Plotting
    "matplotlib>=3.9.0",
    "seaborn>=0.13.0",
]

[project.optional-dependencies]
dev = [
    "pre-commit",
]
doc = [
    "docutils>=0.8,!=0.18.*,!=0.19.*",
    "sphinx>=4",
    "furo",
    "myst-nb",
    "myst-parser",
    "sphinxcontrib-bibtex>=1.0.0",
    "sphinx-gallery",
    "sphinx-autodoc-typehints",
    "sphinx-copybutton",
    "sphinx-remove-toctrees",
    "sphinx-design",
    "sphinx-last-updated-by-git",
    "sphinx-automodapi",
    "sphinxext-opengraph",
    "pygments",
    "pyenchant",
    "nbsphinx",
    "nbsphinx-link",
    "ipykernel",
    "ipython",
]
test = [
    "pytest",
    "pytest-cov",
]

# [tool.dependencies]
# pydeseq2 = {path = "../pydeseq2"}

[tool.hatch.version]
source = "vcs"

[tool.coverage.run]
source = ["glmax"]
omit = [
    "**/test_*.py",
]

[tool.pytest.ini_options]
testpaths = "glmax/tests"
xfail_strict = true
addopts = [
    "--import-mode=importlib",  # allow using test files with same name
]
markers = [
    "conda: marks a subset of tests to be ran on the Bioconda CI.",
    "extra: marks tests that require extra dependencies."
]
minversion = 6.0
norecursedirs = [ '.*', 'build', 'dist', '*.egg', 'data', '__pycache__']

[tool.black]
line-length = 80

[tool.ruff]
src = ["src"]
line-length = 80
select = [
    "F",  # Errors detected by Pyflakes
    "E",  # Error detected by Pycodestyle
    "W",  # Warning detected by Pycodestyle
    "I",  # isort
    #"D",  # pydocstyle
    "B",  # flake8-bugbear
    "TID",  # flake8-tidy-imports
    "C4",  # flake8-comprehensions
    "BLE",  # flake8-blind-except
    "UP",  # pyupgrade
    "RUF100",  # Report unused noqa directives
]
ignore = [
    # Do not assign a lambda expression -> lambda expression are convenient
    "E731",
    # Missing docstring in __init__
    "D107",
    ## Disable one in each pair of mutually incompatible rules
    # We donâ€™t want a blank line before a class docstring
    "D203"
]
